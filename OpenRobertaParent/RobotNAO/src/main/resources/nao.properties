robot.plugin.factory = de.fhg.iais.roberta.factory.NaoFactory

# robot specific toolboxes, default program and configuration
robot.program.toolbox.beginner = <toolbox_set id="toolbox" style="display: none"><category name="TOOLBOX_ACTION" svg="true"><block type="naoActions_applyPosture"></block><block type="naoActions_walk"><field name="DIRECTION">FOREWARD</field><value name="POWER"><block type="math_number"><field name="NUM">50</field></block></value></block><block type="naoActions_turn"><field name="DIRECTION">LEFT</field><value name="POWER"><block type="math_number"><field name="NUM">90</field></block></value></block><block type="naoActions_animation"></block><block type="robActions_sayText"><value name="OUT"><block type="text"><field name="TEXT">Hallo</field></block></value></block><block type="naoActions_rgbLeds"><value name="COLOR"><block type="naoColour_picker"><field name="COLOUR">#ff0000</field></block></value></block><block type="naoActions_setIntensity"><value name="INTENSITY"><block type="math_number"><field name="NUM">50</field></block></value></block><block type="naoActions_ledOff"></block><block type="naoActions_randomEyes"><value name="DURATION"><block type="math_number"><field name="NUM">2000</field></block></value></block><block type="naoActions_rasta"><value name="DURATION"><block type="math_number"><field name="NUM">2000</field></block></value></block><block type="naoActions_setVolume"><value name="VOLUME"><block type="math_number"><field name="NUM">50</field></block></value></block></category><category name="TOOLBOX_SENSOR" svg="true"><block type="robSensors_touch_getSample"></block><block type="robSensors_ultrasonic_getSample"></block><block type="robSensors_detectmark_getSample"></block><block type="naoSensors_getMarkInformation"><value name="VALUE"><block type="math_number"><field name="NUM">84</field></block></value></block><block type="robSensors_detectface_getSample"></block><block type="naoSensors_getFaceInformation"><value name="VALUE"><block type="text"><field name="TEXT">Roberta</field></block></value></block><block type="naoSensors_recognizeWord"></block></category><category name="TOOLBOX_CONTROL" svg="true"><block type="robControls_if"></block><block type="robControls_ifElse"></block><block type="controls_repeat_ext"><value name="TIMES"><block type="math_number"><field name="NUM">10</field></block></value></block><block type="robControls_wait_time"><value name="WAIT"><block type="math_number"><field name="NUM">500</field></block></value></block><block type="robControls_wait_for"><value name="WAIT0"><block type="logic_compare"><field name="OP">EQ</field><mutation operator_range="BOOL"></mutation><value name="A"><block type="robSensors_getSample"></block></value><value name="B"><block type="logic_boolean"></block></value></block></value></block></category><category name="TOOLBOX_LOGIC" svg="true"><block type="logic_compare"></block><block type="logic_operation"></block><block type="logic_boolean"></block></category><category name="TOOLBOX_MATH" svg="true"><block type="math_number"></block><block type="math_arithmetic"></block></category><category name="TOOLBOX_TEXT" svg="true"><block type="text"></block><block type="text_comment"></block></category><category name="TOOLBOX_COLOUR" svg="true"><block type="naoColour_picker"></block><block type="naoColour_rgb"><value name="RED"><block type="math_number" intask="true"><field name="NUM">120</field></block></value><value name="GREEN"><block type="math_number" intask="true"><field name="NUM">120</field></block></value><value name="BLUE"><block type="math_number" intask="true"><field name="NUM">120</field></block></value></block></category><category name="TOOLBOX_VARIABLE" custom="VARIABLE" svg="true"></category></toolbox_set>
robot.program.toolbox.expert = <toolbox_set id="toolbox" style="display: none"><category name="TOOLBOX_ACTION" svg="true"><category name="TOOLBOX_MOVE" svg="true"><block type="naoActions_applyPosture"></block><block type="naoActions_hand"></block><block type="naoActions_moveJoint"><value name="POWER"><block type="math_number"><field name="NUM">10</field></block></value></block><block type="naoActions_stiffness"></block></category><category name="TOOLBOX_WALK" svg="true"><block type="naoActions_walk"><field name="DIRECTION">FOREWARD</field><value name="POWER"><block type="math_number"><field name="NUM">50</field></block></value></block><block type="naoActions_turn"><field name="DIRECTION">LEFT</field><value name="POWER"><block type="math_number"><field name="NUM">90</field></block></value></block><block type="naoActions_walkTo"><value name="X"><block type="math_number"><field name="NUM">0</field></block></value><value name="Y"><block type="math_number"><field name="NUM">0</field></block></value><value name="Theta"><block type="math_number"><field name="NUM">0</field></block></value></block><block type="naoActions_walk_async"><value name="XSpeed"><block type="math_number"><field name="NUM">0</field></block></value><value name="YSpeed"><block type="math_number"><field name="NUM">0</field></block></value><value name="ZSpeed"><block type="math_number"><field name="NUM">0</field></block></value></block><block type="naoActions_stop"></block></category><category name="TOOLBOX_ANIMATION" svg="true"><block type="naoActions_animation"></block><block type="naoActions_autonomous"></block><block type="naoActions_pointLookAt"><value name="X"><block type="math_number"><field name="NUM">0</field></block></value><value name="Y"><block type="math_number"><field name="NUM">0</field></block></value><value name="Z"><block type="math_number"><field name="NUM">0</field></block></value><value name="Speed"><block type="math_number"><field name="NUM">0</field></block></value></block></category><category name="TOOLBOX_SOUND" svg="true"><block type="robActions_sayText"><value name="OUT"><block type="text"><field name="TEXT">Hallo</field></block></value></block><block type="robActions_sayText_parameters"><value name="OUT"><block type="text"><field name="TEXT">Hallo</field></block></value><value name="VOICESPEED"><block type="math_number"><field name="NUM">30</field></block></value><value name="VOICEPITCH"><block type="math_number"><field name="NUM">30</field></block></value></block><block type="naoActions_getLanguage"></block><block type="robActions_setLanguage"><field name="LANGUAGE">GERMAN</field></block><block type="naoActions_getVolume"></block><block type="naoActions_setVolume"><value name="VOLUME"><block type="math_number"><field name="NUM">50</field></block></value></block></category><category name="TOOLBOX_VISION" svg="true"><block type="naoActions_learnFace"><value name="NAME"><block type="text"><field name="TEXT">Roberta</field></block></value></block><block type="naoActions_forgetFace"><value name="NAME"><block type="text"><field name="TEXT">Roberta</field></block></value></block><block type="naoActions_takePicture"><value name="FILENAME"><block type="text"><field name="TEXT">RobertaPicture</field></block></value></block><block type="naoActions_recordVideo"><value name="DURATION"><block type="math_number"><field name="NUM">5</field></block></value><value name="FILENAME"><block type="text"><field name="TEXT">RobertaVideo</field></block></value></block></category><category name="TOOLBOX_LIGHT" svg="true"><block type="naoActions_rgbLeds"><value name="COLOR"><block type="naoColour_picker"><field name="COLOUR">#ff0000</field></block></value></block><block type="naoActions_setIntensity"><value name="INTENSITY"><block type="math_number"><field name="NUM">50</field></block></value></block><block type="naoActions_ledOff"></block><block type="naoActions_ledReset"></block><block type="naoActions_randomEyes"><value name="DURATION"><block type="math_number"><field name="NUM">2</field></block></value></block><block type="naoActions_rasta"><value name="DURATION"><block type="math_number"><field name="NUM">2</field></block></value></block></category></category><category name="TOOLBOX_SENSOR" svg="true"><block type="robSensors_touch_getSample"></block><block type="robSensors_ultrasonic_getSample"></block><block type="robSensors_detectmark_getSample"></block><block type="naoSensors_getMarkInformation"><value name="VALUE"><block type="math_number"><field name="NUM">84</field></block></value></block><block type="robSensors_detectface_getSample"></block><block type="naoSensors_getFaceInformation"><value name="VALUE"><block type="text"><field name="TEXT">Roberta</field></block></value></block><block type="naoSensors_recognizeWord"></block><block type="robSensors_gyro_getSample"></block><block type="robSensors_accelerometer_getSample"></block><block type="robSensors_fsr_getSample"></block><block type="robSensors_electriccurrent_getSample"></block></category><category name="TOOLBOX_CONTROL" svg="true"><category name="TOOLBOX_DECISION" svg="true"><block type="robControls_if"></block><block type="robControls_ifElse"></block></category><category name="TOOLBOX_LOOP" svg="true"><block type="robControls_loopForever"></block><block type="controls_whileUntil"></block><block type="controls_repeat_ext"><value name="TIMES"><block type="math_number"><field name="NUM">10</field></block></value></block><block type="robControls_for"><value name="FROM"><block type="math_number"><field name="NUM">1</field></block></value><value name="TO"><block type="math_number"><field name="NUM">10</field></block></value><value name="BY"><block type="math_number"><field name="NUM">1</field></block></value></block><block type="robControls_forEach"></block><block type="controls_flow_statements"></block></category><category name="TOOLBOX_WAIT" svg="true"><block type="robControls_wait_time"><value name="WAIT"><block type="math_number"><field name="NUM">500</field></block></value></block><block type="robControls_wait"></block><block type="robControls_wait_for"><value name="WAIT0"><block type="logic_compare"><field name="OP">EQ</field><mutation operator_range="BOOL"></mutation><value name="A"><block type="robSensors_getSample"></block></value><value name="B"><block type="logic_boolean"></block></value></block></value></block></category></category><category name="TOOLBOX_LOGIC" svg="true"><block type="logic_compare"></block><block type="logic_operation"></block><block type="logic_negate"></block><block type="logic_boolean"></block><block type="logic_null"></block><block type="logic_ternary"></block></category><category name="TOOLBOX_MATH" svg="true"><block type="math_number"></block><block type="math_arithmetic"></block><block type="math_single"></block><block type="math_trig"></block><block type="math_constant"></block><block type="math_number_property"></block><block type="robMath_change"><value name="DELTA"><block type="math_number"><field name="NUM">1</field></block></value></block><block type="math_round"></block><block type="math_on_list"></block><block type="math_modulo"></block><block type="math_constrain"><value name="LOW"><block type="math_number"><field name="NUM">1</field></block></value><value name="HIGH"><block type="math_number"><field name="NUM">100</field></block></value></block><block type="math_random_int"><value name="FROM"><block type="math_number"><field name="NUM">1</field></block></value><value name="TO"><block type="math_number"><field name="NUM">100</field></block></value></block><block type="math_random_float"></block></category><category name="TOOLBOX_TEXT" svg="true"><block type="text"></block><block type="text_comment"></block><block type="robText_join"></block><block type="robText_append"></block></category><category name="TOOLBOX_LIST" svg="true"><block type="robLists_create_with"><mutation items="0" list_type="Number"></mutation></block><block type="robLists_create_with"><mutation items="3" list_type="Number"></mutation><value name="ADD0"><block type="math_number"></block></value><value name="ADD1"><block type="math_number"></block></value><value name="ADD2"><block type="math_number"></block></value></block><block type="robLists_repeat"><value name="NUM"><block type="math_number"><field name="NUM">5</field></block></value></block><block type="robLists_length"></block><block type="robLists_isEmpty"></block><block type="robLists_indexOf"></block><block type="robLists_getIndex"></block><block type="robLists_setIndex"></block><block type="robLists_getSublist"></block></category><category name="TOOLBOX_COLOUR" svg="true"><block type="naoColour_picker"></block><block type="naoColour_rgb"><value name="RED"><block type="math_number" intask="true"><field name="NUM">120</field></block></value><value name="GREEN"><block type="math_number" intask="true"><field name="NUM">120</field></block></value><value name="BLUE"><block type="math_number" intask="true"><field name="NUM">120</field></block></value></block></category><category name="TOOLBOX_VARIABLE" custom="VARIABLE" svg="true"></category><category name="TOOLBOX_PROCEDURE" custom="PROCEDURE" svg="true"></category></toolbox_set>
robot.program.default = <block_set xmlns='http://www.w3.org/1999/xhtml'><instance><block type='robControls_start'></block></instance></block_set>
robot.configuration.toolbox = <toolbox_set id="toolbox" style="display: none"><category name='Brick'><block type='naoBrick_NAO-Brick'><field name='IP_ADDRESS'>0.0.0.0</field><field name='PORT'>22</field><field name='USERNAME'>nao</field><field name='PASSWORD'>nao</field></block></category></toolbox_set>
robot.configuration.default = <block_set xmlns="http://de.fhg.iais.roberta.blockly" robottype="nao" xmlversion=""><instance x="138" y="88"><block id="1" type='naoBrick_NAO-Brick'><field name='IP_ADDRESS'>0.0.0.0</field><field name='PORT'>22</field><field name='USERNAME'>nao</field><field name='PASSWORD'>nao</field></block></instance></block_set>
robot.name = nao
# robot's long name to display
robot.real.name = NAO
robot.vendor = na

# robot's info for further information
robot.info = https://www.ald.softbankrobotics.com/en/cool-robots/nao
robot.configuration = false
robot.connection = token
robot.sim = false

#MOVEMENT
blockType.SET_MODE = ACTOR,de.fhg.iais.roberta.syntax.action.nao.SetMode,naoActions_mode
blockType.APPLY_POSTURE = ACTOR,de.fhg.iais.roberta.syntax.action.nao.ApplyPosture,naoActions_applyPosture
blockType.SET_STIFFNESS = ACTOR,de.fhg.iais.roberta.syntax.action.nao.SetStiffness,naoActions_stiffness
blockType.AUTONOMOUS = ACTOR,de.fhg.iais.roberta.syntax.action.nao.Autonomous,naoActions_autonomous
blockType.HAND = ACTOR,de.fhg.iais.roberta.syntax.action.nao.Hand,naoActions_hand
blockType.MOVE_JOINT = ACTOR,de.fhg.iais.roberta.syntax.action.nao.MoveJoint,naoActions_moveJoint
#WALK
blockType.WALK_DISTANCE = ACTOR,de.fhg.iais.roberta.syntax.action.nao.WalkDistance,naoActions_walk
blockType.TURN_DEGREES = ACTOR,de.fhg.iais.roberta.syntax.action.nao.TurnDegrees,naoActions_turn
blockType.Walk_To = ACTOR,de.fhg.iais.roberta.syntax.action.nao.WalkTo,naoActions_walkTo
blockType.WALK_ASYNC = ACTOR,de.fhg.iais.roberta.syntax.action.nao.WalkAsync,naoActions_walk_async
blockType.Stop = ACTOR,de.fhg.iais.roberta.syntax.action.nao.Stop,naoActions_stop
#ANIMATIONS
blockType.ANIMATION = ACTOR,de.fhg.iais.roberta.syntax.action.nao.Animation,naoActions_animation
blockType.POINT_LOOK_AT = ACTOR,de.fhg.iais.roberta.syntax.action.nao.PointLookAt,naoActions_pointLookAt
#SOUNDS
blockType.SET_VOLUME = ACTOR,de.fhg.iais.roberta.syntax.action.nao.SetVolume,naoActions_setVolume
blockType.GET_VOLUME = ACTOR,de.fhg.iais.roberta.syntax.action.nao.GetVolume,naoActions_getVolume
blockType.GET_LANGUAGE = ACTOR,de.fhg.iais.roberta.syntax.action.nao.GetLanguage,naoActions_getLanguage
blockType.PLAY_FILE = ACTOR,de.fhg.iais.roberta.syntax.action.nao.PlayFile,naoActions_playFile
#VISION
blockType.TAKE_PICTURE = ACTOR,de.fhg.iais.roberta.syntax.action.nao.TakePicture,naoActions_takePicture
blockType.RECORD_VIDEO = ACTOR,de.fhg.iais.roberta.syntax.action.nao.RecordVideo,naoActions_recordVideo
#LIGHTS
blockType.RGB_LED = ACTOR,de.fhg.iais.roberta.syntax.action.nao.SetLeds,naoActions_rgbLeds
blockType.SET_INTENSITY = ACTOR,de.fhg.iais.roberta.syntax.action.nao.SetIntensity,naoActions_setIntensity
blockType.LED_OFF = ACTOR,de.fhg.iais.roberta.syntax.action.nao.LedOff,naoActions_ledOff
blockType.LED_RESET = ACTOR,de.fhg.iais.roberta.syntax.action.nao.LedReset,naoActions_ledReset
blockType.RANDOM_EYES_DURATION = ACTOR,de.fhg.iais.roberta.syntax.action.nao.RandomEyesDuration,naoActions_randomEyes
blockType.RASTA_DURATION = ACTOR,de.fhg.iais.roberta.syntax.action.nao.RastaDuration,naoActions_rasta
blockType.COLOR_HEX_STRING = EXPR,de.fhg.iais.roberta.syntax.lang.expr.nao.ColorHexString,naoColour_picker
blockType.LEARN_FACE = ACTOR,de.fhg.iais.roberta.syntax.action.nao.LearnFace,naoActions_learnFace
blockType.FORGET_FACE = ACTOR,de.fhg.iais.roberta.syntax.action.nao.ForgetFace,naoActions_forgetFace


#SENSORS
blockType.FSR_SENSOR = SENSOR,de.fhg.iais.roberta.syntax.sensor.nao.FsrSensor,robSensors_fsr_getSample
blockType.DETECT_MARK = SENSOR,de.fhg.iais.roberta.syntax.sensor.nao.DetectMarkSensor,robSensors_detectmark_getSample
blockType.NAO_MARK_INFORMATION = SENSOR,de.fhg.iais.roberta.syntax.sensor.nao.NaoMarkInformation,naoSensors_getMarkInformation
blockType.DETECT_FACE = SENSOR,de.fhg.iais.roberta.syntax.sensor.nao.DetectFaceSensor,robSensors_detectface_getSample
blockType.NAO_FACE_INFORMATION = SENSOR,de.fhg.iais.roberta.syntax.sensor.nao.DetectedFaceInformation,naoSensors_getFaceInformation
blockType.NAO_SENSOR_GET_SAMPLE = SENSOR,de.fhg.iais.roberta.syntax.sensor.generic.GetSampleSensor,naoSensors_getSample
blockType.RECOGNIZE_WORD = SENSOR,de.fhg.iais.roberta.syntax.sensor.nao.RecognizeWord,naoSensors_recognizeWord
blockType.ELECTRIC_CURRENT = SENSOR,de.fhg.iais.roberta.syntax.sensor.nao.ElectricCurrentSensor,robSensors_electriccurrent_getSample

# robot specific toolboxes ports
robot.port.sensor.X = X
robot.port.sensor.Y = Y
robot.port.sensor.Z = Z
robot.port.sensor.HEAD = HEAD
robot.port.sensor.HAND = HAND
robot.port.sensor.SHOULDER = SHOULDER
robot.port.sensor.ELBOW = ELBOW
robot.port.sensor.WRIST = WRIST
robot.port.sensor.HIP = HIP
robot.port.sensor.KNEE = KNEE
robot.port.sensor.ANKLE = ANKLE
robot.port.sensor.BUMPER = BUMPER
robot.port.sensor.LEFT = LEFT
robot.port.sensor.RIGHT = RIGHT
robot.port.sensor.NAO_TOUCHSENSOR = NAO_TOUCHSENSOR
robot.port.sensor.NAO_DETECTFACE = NAO_DETECTFACE
robot.port.sensor.NAO_NAOMARK = NAO_NAOMARK
robot.port.sensor.NAO_SONAR = NAO_SONAR
robot.port.sensor.NAO_GYROMETER = NAO_GYROMETER
robot.port.sensor.NAO_ACCELEROMETER = NAO_ACCELEROMETER
robot.port.sensor.FSR = FSR
robot.port.sensor.NAO_RECOGNIZEWORD = NAO_RECOGNIZEWORD

robot.port.sensor.NO_PORT = NO_PORT

robot.wait_until.TOUCH = de.fhg.iais.roberta.syntax.sensor.generic.TouchSensor, TOUCH, TOUCH
robot.wait_until.TOUCH_PRESSED = de.fhg.iais.roberta.syntax.sensor.generic.TouchSensor, TOUCH, PRESSED
robot.wait_until.ULTRASONIC_DISTANCE = de.fhg.iais.roberta.syntax.sensor.generic.UltrasonicSensor, ULTRASONIC, DISTANCE
robot.wait_until.ULTRASONIC_PRESENCE = de.fhg.iais.roberta.syntax.sensor.generic.UltrasonicSensor, ULTRASONIC, PRESENCE
robot.wait_until.COLOUR_COLOUR = de.fhg.iais.roberta.syntax.sensor.generic.ColorSensor, COLOUR, COLOUR
robot.wait_until.COLOUR_LIGHT = de.fhg.iais.roberta.syntax.sensor.generic.ColorSensor, COLOUR, LIGHT
robot.wait_until.COLOUR_AMBIENTLIGHT = de.fhg.iais.roberta.syntax.sensor.generic.ColorSensor, COLOUR, AMBIENTLIGHT
robot.wait_until.INFRARED_DISTANCE = de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor, INFRARED, DISTANCE
robot.wait_until.ENCODER_ROTATION = de.fhg.iais.roberta.syntax.sensor.generic.EncoderSensor, ENCODER, ROTATION
robot.wait_until.ENCODER_DEGREE = de.fhg.iais.roberta.syntax.sensor.generic.EncoderSensor, ENCODER, DEGREE
robot.wait_until.ENCODER_DISTANCE = de.fhg.iais.roberta.syntax.sensor.generic.EncoderSensor, ENCODER, DISTANCE
robot.wait_until.KEY_PRESSED = de.fhg.iais.roberta.syntax.sensor.generic.KeysSensor, KEY_PRESSED, PRESSED
robot.wait_until.GYRO_RATE = de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor, GYRO, RATE
robot.wait_until.GYRO_ANGLE = de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor, GYRO, ANGLE
robot.wait_until.GYRO_TILTED = de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor, GYRO, TILTED
robot.wait_until.GYRO_X = de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor, GYRO, X
robot.wait_until.GYRO_Y = de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor, GYRO, Y
robot.wait_until.TIME = de.fhg.iais.roberta.syntax.sensor.generic.TimerSensor, TIME, VALUE
robot.wait_until.TIMER_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.TimerSensor, TIME, VALUE
robot.wait_until.SOUND = de.fhg.iais.roberta.syntax.sensor.generic.SoundSensor, SOUND, VALUE
robot.wait_until.SOUND_SOUND = de.fhg.iais.roberta.syntax.sensor.generic.SoundSensor, SOUND, SOUND
robot.wait_until.LIGHT_LIGHT = de.fhg.iais.roberta.syntax.sensor.generic.LightSensor, LIGHT, LIGHT
robot.wait_until.LIGHT_AMBIENTLIGHT = de.fhg.iais.roberta.syntax.sensor.generic.LightSensor, LIGHT, AMBIENTLIGHT
robot.wait_until.INFRARED_OBSTACLE = de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor, INFRARED, OBSTACLE
robot.wait_until.INFRARED_PRESENCE = de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor, INFRARED, PRESENCE
robot.wait_until.INFRARED_SENSOR1 = de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor, INFRARED, SENSOR1
robot.wait_until.INFRARED_SENSOR2 = de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor, INFRARED, SENSOR2
robot.wait_until.COMPASS_ANGLE = de.fhg.iais.roberta.syntax.sensor.generic.CompassSensor, COMPASS, ANGLE
robot.wait_until.INFRARED_SEEK = de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor, INFRARED, SEEK
robot.wait_until.PINTOUCH_PRESSED = de.fhg.iais.roberta.syntax.sensor.generic.PintouchSensor, PINTOUCH, PRESSED
robot.wait_until.GESTURE_UP = de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor, GESTURE, UP
robot.wait_until.GESTURE_DOWN = de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor, GESTURE, DOWN
robot.wait_until.GESTURE_FACE_UP = de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor, GESTURE, FACE_UP
robot.wait_until.GESTURE_FACE_DOWN = de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor, GESTURE, FACE_DOWN
robot.wait_until.GESTURE_SHAKE = de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor, GESTURE, SHAKE
robot.wait_until.GESTURE_FREEFALL = de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor, GESTURE, FREEFALL
robot.wait_until.GESTURE_ACTIVE = de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor, GESTURE, GESTURE_ACTIVE, GESTURE_ACTIVE
robot.wait_until.MICROPHONE = de.fhg.iais.roberta.syntax.sensor.generic.MicrophoneSensor, MICROPHONE, MICROPHONE
robot.wait_until.TEMPERATURE = de.fhg.iais.roberta.syntax.sensor.generic.TemperatureSensor, TEMPERATURE, TEMPERATURE
robot.wait_until.LIGHT_LEVEL = de.fhg.iais.roberta.syntax.sensor.generic.LightSensor, LIGHT_LEVEL, LIGHT_LEVEL
robot.wait_until.LIGHT_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.LightSensor, LIGHT_VALUE, LIGHT_VALUE
robot.wait_until.ACCELERATION = de.fhg.iais.roberta.syntax.sensor.generic.AccelerationSensor, ACCELERATION, ACCELERATION
robot.wait_until.ORIENTATION = de.fhg.iais.roberta.syntax.sensor.generic.OrientationSensor, ORIENTATION, ORIENTATION
robot.wait_until.PIN_TOUCHED = de.fhg.iais.roberta.syntax.sensor.generic.PinSensor, PIN_TOUCHED, PIN_TOUCHED
robot.wait_until.PIN_ANALOG = de.fhg.iais.roberta.syntax.sensor.generic.PinSensor, PIN_ANALOG, ANALOG
robot.wait_until.PIN_DIGITAL = de.fhg.iais.roberta.syntax.sensor.generic.PinSensor, PIN_DIGITAL, DIGITAL
robot.wait_until.PIN_PULSEHIGH = de.fhg.iais.roberta.syntax.sensor.generic.PinSensor, PIN_PULSEHIGH, PULSEHIGH
robot.wait_until.PIN_PULSELOW = de.fhg.iais.roberta.syntax.sensor.generic.PinSensor, PIN_PULSELOW, PULSELOW
robot.wait_until.PIN_PULSE_HIGH = de.fhg.iais.roberta.syntax.sensor.generic.PinSensor, PIN_PULSE_HIGH, PULSE_HIGH
robot.wait_until.PIN_PULSE_LOW = de.fhg.iais.roberta.syntax.sensor.generic.PinSensor, PIN_PULSE_LOW, PULSE_LOW
robot.wait_until.TEMPERATURE_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.TemperatureSensor, TEMPERATURE, TEMPERATURE
robot.wait_until.ACCELEROMETER_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.AccelerometerSensor, ACCELEROMETER, DEFAULT
robot.wait_until.ACCELEROMETER_X = de.fhg.iais.roberta.syntax.sensor.generic.AccelerometerSensor, ACCELEROMETER, X
robot.wait_until.ACCELEROMETER_Y = de.fhg.iais.roberta.syntax.sensor.generic.AccelerometerSensor, ACCELEROMETER, Y
robot.wait_until.ACCELEROMETER_Z = de.fhg.iais.roberta.syntax.sensor.generic.AccelerometerSensor, ACCELEROMETER, Z
robot.wait_until.ELECTRICCURRENT_VALUE = de.fhg.iais.roberta.syntax.sensor.nao.ElectricCurrentSensor, ELECTRIC_CURRENT, VALUE
robot.wait_until.DETECTMARK_IDONE = de.fhg.iais.roberta.syntax.sensor.nao.DetectMarkSensor, DETECT_MARK, IDONE
robot.wait_until.DETECTFACE_NAMEONE = de.fhg.iais.roberta.syntax.sensor.nao.DetectFaceSensor, DETECT_FACE, NAMEONE
robot.wait_until.FSR_VALUE = de.fhg.iais.roberta.syntax.sensor.nao.FsrSensor, FSR, VALUE
robot.wait_until.WALL_DISTANCE = de.fhg.iais.roberta.syntax.sensor.generic.WallSensor, WALL, DISTANCE
robot.wait_until.DROP_OFF_DISTANCE = de.fhg.iais.roberta.syntax.sensor.generic.DropSensor, DROP_OFF, DISTANCE
robot.wait_until.INFRARED_AMBIENTLIGHT = de.fhg.iais.roberta.syntax.sensor.generic.LightSensor, LIGHT, AMBIENTLIGHT
robot.wait_until.MOISTURE_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.MoistureSensor, MOISTURE, VALUE
robot.wait_until.POTENTIOMETER_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.PotentiometerSensor, POTENTIOMETER, VALUE
robot.wait_until.INFRARED_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor, INFRARED, VALUE
robot.wait_until.HUMIDITY_HUMIDITY = de.fhg.iais.roberta.syntax.sensor.generic.HumiditySensor, HUMIDITY, HUMIDITY
robot.wait_until.HUMIDITY_TEMPERATURE = de.fhg.iais.roberta.syntax.sensor.generic.HumiditySensor, HUMIDITY, TEMPERATURE
robot.wait_until.MOTION_PRESENCE = de.fhg.iais.roberta.syntax.sensor.generic.MotionSensor, MOTION, PRESENCE
robot.wait_until.PULSE_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.PulseSensor, PULSE, VALUE
robot.wait_until.DROP_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.DropSensor, DROP, VALUE
robot.wait_until.FLAME_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.FlameSensor, FLAME, FLAME_VALUE
robot.wait_until.RFID_SERIAL = de.fhg.iais.roberta.syntax.sensor.generic.RfidSensor, RFID, SERIAL
robot.wait_until.RFID_PRESENCE = de.fhg.iais.roberta.syntax.sensor.generic.RfidSensor, RFID, PRESENCE

