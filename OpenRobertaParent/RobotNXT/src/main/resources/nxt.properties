robot.plugin.factory = de.fhg.iais.roberta.factory.NxtFactory
robot.plugin.compiler.resources.dir = RobotNXT/resources

# directory to store (temporarily) the generated user programs
crosscompiler.basedirrobot.configuration.= ../OpenRobertaServer/userProjects/

# the resources needed for program compilation
robot.resources.dir = ./resources/

# robot specific toolboxes, default program and configuration
robot.program.toolbox.beginner = <toolbox_set id='toolbox' style='display: none'><category name='TOOLBOX_ACTION' svg='true'><block type='robActions_motorDiff_on_for'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='DISTANCE'><block type='math_number'><field name='NUM'>20</field></block></value></block><block type='robActions_motorDiff_on'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block><block type='robActions_motorDiff_stop' /><block type='robActions_motorDiff_turn_for'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value><value name='DEGREE'><block type='math_number'><field name='NUM'>20</field></block></value></block><block type='robActions_motorDiff_turn'><value name='POWER'><block type='math_number'><field name='NUM'>30</field></block></value></block><block type="robActions_motorDiff_curve_for"><value name="POWER_LEFT"><block type="math_number"><field name="NUM">10</field></block></value><value name="POWER_RIGHT"><block type="math_number"><field name="NUM">30</field></block></value><value name="DISTANCE"><block type="math_number"><field name="NUM">20</field></block></value></block><block type="robActions_motorDiff_curve"><value name="POWER_LEFT"><block type="math_number"><field name="NUM">10</field></block></value><value name="POWER_RIGHT"><block type="math_number"><field name="NUM">30</field></block></value></block><block type='robActions_display_text'><value name='OUT'><block type='text'><field name='TEXT'>Hallo</field></block></value><value name='COL'><block type='math_number'><field name='NUM'>0</field></block></value><value name='ROW'><block type='math_number'><field name='NUM'>1</field></block></value></block><block type='robActions_display_clear' /><block type='robActions_play_tone'><value name='FREQUENCE'><block type='math_number'><field name='NUM'>300</field></block></value><value name='DURATION'><block type='math_number'><field name='NUM'>100</field></block></value></block><block type="mbedActions_play_note" /><block type='robActions_play_setVolume'><value name='VOLUME'><block type='math_number'><field name='NUM'>50</field></block></value></block></category><category name='TOOLBOX_SENSOR' svg='true'><block type='robSensors_touch_isPressed'><field name='SENSORPORT'>1</field></block><block type='robSensors_sound_getSample'><field name='SENSORPORT'>2</field></block><block type='robSensors_light_getSample'><field name='SENSORPORT'>3</field></block><block type='robSensors_colour_getSample'><field name='SENSORPORT'>3</field></block><block type='robSensors_ultrasonic_getSample'><field name='SENSORPORT'>4</field></block><block type='robSensors_encoder_reset'><field name="SENSORPORT">B</field></block><block type='robSensors_encoder_getSample'><field name="SENSORPORT">B</field></block><block type='robSensors_key_isPressed' /><block type='robSensors_timer_getSample' /><block type='robSensors_timer_reset' /></category><category name='TOOLBOX_CONTROL' svg='true'><block type='robControls_if' /><block type='robControls_ifElse' /><block type='robControls_loopForever' /><block type="controls_repeat_ext"><value name="TIMES"><block type="math_number"><field name="NUM">10</field></block></value></block><block type='robControls_wait_time'><value name='WAIT'><block type='math_number'><field name='NUM'>500</field></block></value></block><block type='robControls_wait_for'><value name='WAIT0'><block type='logic_compare'><value name='A'><block type='robSensors_getSample' /></value><value name='B'><block type='logic_boolean' /></value></block></value></block></category><category name='TOOLBOX_LOGIC' svg='true'><block type='logic_compare' /><block type='logic_operation' /><block type='logic_boolean' /></category><category name='TOOLBOX_MATH' svg='true'><block type='math_number' /><block type='math_arithmetic' /></category><category name='TOOLBOX_TEXT' svg='true'><block type='text' /><block type="text_comment"></block></category><category name='TOOLBOX_COLOUR' svg='true'><block type='robColour_picker'><field name='COLOUR'>#585858</field></block><block type='robColour_picker'><field name='COLOUR'>#000000</field></block><block type='robColour_picker'><field name='COLOUR'>#0057a6</field></block><block type='robColour_picker'><field name='COLOUR'>#00642e</field></block><block type='robColour_picker'><field name='COLOUR'>#f7d117</field></block><block type='robColour_picker'><field name='COLOUR'>#b30006</field></block><block type='robColour_picker'><field name='COLOUR'>#FFFFFF</field></block></category><category name='TOOLBOX_VARIABLE' custom='VARIABLE' svg='true' /></toolbox_set>robot.configuration.robot.configuration.robot.configuration.robot.configuration.robot.configuration.robot.configuration.robot.configuration.
robot.program.toolbox.expert =  <toolbox_set id="toolbox" style="display: none"><category name="TOOLBOX_ACTION" svg="true"><category name="TOOLBOX_MOVE" svg="true"><block type="robActions_motor_on"><field name="MOTORPORT">B</field><value name="POWER"><block type="math_number"><field name="NUM">30</field></block></value></block><block type="robActions_motor_on_for"><field name="MOTORPORT">B</field><value name="POWER"><block type="math_number"><field name="NUM">30</field></block></value><value name="VALUE"><block type="math_number"><field name="NUM">1</field></block></value></block><block type="robActions_motor_getPower"><field name="MOTORPORT">B</field></block><block type="robActions_motor_stop"><field name="MOTORPORT">B</field></block></category><category name="TOOLBOX_DRIVE" svg="true"><block type="robActions_motorDiff_on_for"><value name="POWER"><block type="math_number"><field name="NUM">30</field></block></value><value name="DISTANCE"><block type="math_number"><field name="NUM">20</field></block></value></block><block type="robActions_motorDiff_on"><value name="POWER"><block type="math_number"><field name="NUM">30</field></block></value></block><block type="robActions_motorDiff_stop" /><block type="robActions_motorDiff_turn_for"><value name="POWER"><block type="math_number"><field name="NUM">30</field></block></value><value name="DEGREE"><block type="math_number"><field name="NUM">20</field></block></value></block><block type="robActions_motorDiff_turn"><value name="POWER"><block type="math_number"><field name="NUM">30</field></block></value></block><block type="robActions_motorDiff_curve_for"><value name="POWER_LEFT"><block type="math_number"><field name="NUM">10</field></block></value><value name="POWER_RIGHT"><block type="math_number"><field name="NUM">30</field></block></value><value name="DISTANCE"><block type="math_number"><field name="NUM">20</field></block></value></block><block type="robActions_motorDiff_curve"><value name="POWER_LEFT"><block type="math_number"><field name="NUM">10</field></block></value><value name="POWER_RIGHT"><block type="math_number"><field name="NUM">30</field></block></value></block></category><category name="TOOLBOX_DISPLAY" svg="true"><block type="robActions_display_text"><value name="OUT"><block type="text"><field name="TEXT">Hallo</field></block></value><value name="COL"><block type="math_number"><field name="NUM">0</field></block></value><value name="ROW"><block type="math_number"><field name="NUM">1</field></block></value></block><block type="robActions_display_clear" /></category><category name="TOOLBOX_SOUND" svg="true"><block type="robActions_play_tone"><value name="FREQUENCE"><block type="math_number"><field name="NUM">300</field></block></value><value name="DURATION"><block type="math_number"><field name="NUM">100</field></block></value></block><block type="mbedActions_play_note" /><block type="robActions_play_setVolume"><value name="VOLUME"><block type="math_number"><field name="NUM">50</field></block></value></block><block type="robActions_play_getVolume" /></category><category name="TOOLBOX_LIGHT" svg="true"><block type="robActions_sensorLight_on"><field name="SENSORPORT">3</field></block></category></category><category name="TOOLBOX_SENSOR" svg="true"><block type="robSensors_touch_isPressed"><field name="SENSORPORT">1</field></block><block type="robSensors_sound_getSample"><field name="SENSORPORT">2</field></block><block type="robSensors_light_getSample"><field name="SENSORPORT">3</field></block><block type="robSensors_colour_getSample"><field name="SENSORPORT">3</field></block><block type="robSensors_ultrasonic_getSample"><field name="SENSORPORT">4</field></block><block type="robSensors_encoder_reset"><field name="SENSORPORT">B</field></block><block type="robSensors_encoder_getSample"><field name="SENSORPORT">B</field></block><block type="robSensors_key_isPressed" /><block type="robSensors_timer_getSample" /><block type="robSensors_timer_reset" /></category><category name="TOOLBOX_CONTROL" svg="true"><category name="TOOLBOX_DECISION" svg="true"><block type="robControls_if" /><block type="robControls_ifElse" /></category><category name="TOOLBOX_LOOP" svg="true"><block type="robControls_loopForever" /><block type="controls_repeat_ext"><value name="TIMES"><block type="math_number"><field name="NUM">10</field></block></value></block><block type="controls_whileUntil" /><block type="robControls_for"><value name="FROM"><block type="math_number"><field name="NUM">1</field></block></value><value name="TO"><block type="math_number"><field name="NUM">10</field></block></value><value name="BY"><block type="math_number"><field name="NUM">1</field></block></value></block><block type="robControls_forEach" /><block type="controls_flow_statements" /></category><category name="TOOLBOX_WAIT" svg="true"><block type="robControls_wait" /><block type="robControls_wait_time"><value name="WAIT"><block type="math_number"><field name="NUM">500</field></block></value></block><block type="robControls_wait_for"><value name="WAIT0"><block type="logic_compare"><value name="A"><block type="robSensors_getSample" /></value><value name="B"><block type="logic_boolean" /></value></block></value></block></category></category><category name="TOOLBOX_LOGIC" svg="true"><block type="logic_compare" /><block type="logic_operation" /><block type="logic_negate" /><block type="logic_boolean" /><block type="logic_null" /><block type="logic_ternary" /></category><category name="TOOLBOX_MATH" svg="true"><block type="math_number" /><block type="math_arithmetic" /><block type="math_single" /><block type="math_trig" /><block type="math_constant" /><block type="math_number_property" /><block type="robMath_change"><value name="DELTA"><block type="math_number"><field name="NUM">1</field></block></value></block><block type="math_round" /><block type="math_on_list" /><block type="math_modulo" /><block type="math_constrain"><value name="LOW"><block type="math_number"><field name="NUM">1</field></block></value><value name="HIGH"><block type="math_number"><field name="NUM">100</field></block></value></block><block type="math_random_int"><value name="FROM"><block type="math_number"><field name="NUM">1</field></block></value><value name="TO"><block type="math_number"><field name="NUM">100</field></block></value></block><block type="math_random_float" /></category><category name="TOOLBOX_TEXT" svg="true"><block type="text" /><block type="text_comment"></block><block type="robText_append" /></category><category name="TOOLBOX_LIST" svg="true"><block type="robLists_create_with"><mutation items="0" list_type="Number"></mutation></block><block type="robLists_create_with"><mutation items="3" list_type="Number"></mutation><value name="ADD0"><block type="math_number" /></value><value name="ADD1"><block type="math_number" /></value><value name="ADD2"><block type="math_number" /></value></block><block type="robLists_length" /><block type="robLists_isEmpty" /><block type="robLists_indexOf" /><block type="robLists_getIndex" /><block type="robLists_setIndex" /></category><category name="TOOLBOX_COLOUR" svg="true"><block type="robColour_picker"><field name="COLOUR">#585858</field></block><block type="robColour_picker"><field name="COLOUR">#000000</field></block><block type="robColour_picker"><field name="COLOUR">#0057a6</field></block><block type="robColour_picker"><field name="COLOUR">#00642e</field></block><block type="robColour_picker"><field name="COLOUR">#f7d117</field></block><block type="robColour_picker"><field name="COLOUR">#b30006</field></block><block type="robColour_picker"><field name="COLOUR">#FFFFFF</field></block></category><category name="TOOLBOX_VARIABLE" custom="VARIABLE" svg="true" /><category name="TOOLBOX_PROCEDURE" custom="PROCEDURE" svg="true" /><category name="TOOLBOX_COMMUNICATION" svg="true"><block type="robCommunication_connection" /><block type="robCommunication_sendBlock"><value name="CONNECTION"><block type="robCommunication_connection" /></value></block><block type="robCommunication_receiveBlock"><value name="CONNECTION"><block type="robCommunication_connection" /></value></block><block type="robCommunication_checkConnection"><value name="CONNECTION"><block type="robCommunication_connection" /></value></block></category></toolbox_set>
robot.program.default = <block_set xmlns='http://www.w3.org/1999/xhtml'><instance><block type='robControls_start'><field name='DEBUG'>TRUE</field></block></instance></block_set>robot.configuration.robot.configuration.robot.configuration.robot.configuration.robot.configuration.robot.configuration.robot.configuration.
robot.configuration.toolbox = <toolbox_set id='toolbox' style='display: none'><category name='TOOLBOX_ACTION' svg='true'><block type='robBrick_motor_big'/><block type='robBrick_actor'/></category><category name='TOOLBOX_SENSOR' svg='true'><block type='robBrick_touch' /><block type='robBrick_sound' /><block type='robBrick_light' /><block type='robBrick_ultrasonic' /><block type='robBrick_colour' /><block type='robBrick_HiTechnic_colour' /></category></toolbox_set>
robot.configuration.default = <block_set xmlns="http://de.fhg.iais.roberta.blockly" robottype="nxt" xmlversion="" description="" tags=""> <instance x="0" y="0"> <block type="robBrick_EV3-Brick" id="1" intask="true" deletable="false"> <field name="WHEEL_DIAMETER">5.6</field> <field name="TRACK_WIDTH">12</field> <value name="S1"> <block type="robBrick_touch" id="2" intask="true"></block> </value> <value name="S2"> <block type="robBrick_sound" id="3" intask="true"> <data>nxt</data> </block> </value> <value name="S3"> <block type="robBrick_light" id="4" intask="true"></block> </value> <value name="S4"> <block type="robBrick_ultrasonic" id="5" intask="true"></block> </value> <value name="MB"> <block type="robBrick_motor_big" id="6" intask="true"> <field name="MOTOR_REGULATION">TRUE</field> <field name="MOTOR_REVERSE">OFF</field> <field name="MOTOR_DRIVE">RIGHT</field> </block> </value> <value name="MC"> <block type="robBrick_motor_big" id="7" intask="true"> <field name="MOTOR_REGULATION">TRUE</field> <field name="MOTOR_REVERSE">OFF</field> <field name="MOTOR_DRIVE">LEFT</field> </block> </value> </block> </instance> </block_set>
robot.configuration = true

robot.name = nxt
# robot's long name to display
robot.real.name = NXT
robot.vendor = na
# robot's info for further information
robot.info = https://de.wikipedia.org/wiki/Lego_Mindstorms_NXT

# simulation available?
robot.sim = true

robot.connection = token

# block types, that are added by this robot. Syntax (for category, see enum Category):
# blockType.<unique-name-of-the-block-type> = <category>,<full-path-of-implementing-class>,<blockly-xml-element-name-1>,...,<blockly-xml-element-name-n>


robot.hw.sensors = S1, S2, S3, S4, MA, MB, MC, ENTER, LEFT, RIGHT
robot.hw.actors = MA, MB, MC

robot.port.slot.NO_SLOT = NO_SLOT

robot.dropdown.color.BLACK = #000000
robot.dropdown.color.BLUE = #0057A6
robot.dropdown.color.GREEN = #00642E
robot.dropdown.color.YELLOW = #F7D117
robot.dropdown.color.RED = #B30006
robot.dropdown.color.WHITE = #FFFFFF
robot.dropdown.color.VIOLET = #EE82EE
robot.dropdown.color.PURPLE = #800080
robot.dropdown.color.LIME = #00FF00
robot.dropdown.color.ORANGE = #FFA500
robot.dropdown.color.MAGENTA = #FF00FF
robot.dropdown.color.CRIMSON = #DC143C
robot.dropdown.color.NONE = #585858

robot.hw.mode.accelerometer.DEFAULT = DEFAULT
robot.hw.mode.accelerometer.VALUE = VALUE
robot.hw.mode.axis.DEFAULT = DEFAULT
robot.hw.mode.axis.X = X
robot.hw.mode.axis.Y = Y
robot.hw.mode.axis.Z = Z
robot.hw.mode.axis.STRENGTH = STRENGTH
robot.hw.mode.axis.VALUE = VALUE
robot.hw.mode.color.DEFAULT = DEFAULT
robot.hw.mode.color.COLOUR = COLOUR
robot.hw.mode.color.RED = RED
robot.hw.mode.color.RGB = RGB
robot.hw.mode.color.AMBIENTLIGHT = AMBIENTLIGHT
robot.hw.mode.color.LIGHT = LIGHT
robot.hw.mode.compass.DEFAULT = DEFAULT
robot.hw.mode.compass.VALUE = VALUE
robot.hw.mode.compass.ANGLE = ANGLE
robot.hw.mode.compass.COMPASS = COMPASS
robot.hw.mode.compass.CALIBRATE = CALIBRATE
robot.hw.mode.drop.VALUE = VALUE
robot.hw.mode.encoder.DEFAULT = DEFAULT
robot.hw.mode.encoder.ROTATION = ROTATION
robot.hw.mode.encoder.DEGREE = DEGREE
robot.hw.mode.encoder.RESET = RESET
robot.hw.mode.encoder.DISTANCE = DISTANCE
robot.hw.mode.gesture.VALUE = VALUE
robot.hw.mode.gesture.UP = UP
robot.hw.mode.gesture.DOWN = DOWN
robot.hw.mode.gesture.LEFT = LEFT
robot.hw.mode.gesture.RIGHT = RIGHT
robot.hw.mode.gesture.FACE_DOWN = FACE_DOWN
robot.hw.mode.gesture.FACE_UP = FACE_UP
robot.hw.mode.gesture.SHAKE = SHAKE
robot.hw.mode.gesture.FREEFALL = FREEFALL
robot.hw.mode.gesture.G3 = G3
robot.hw.mode.gesture.G6 = G6
robot.hw.mode.gesture.G8 = G8
robot.hw.mode.gyro.DEFAULT = DEFAULT
robot.hw.mode.gyro.RATE = RATE
robot.hw.mode.gyro.ANGLE = ANGLE
robot.hw.mode.gyro.TILTED = TILTED
robot.hw.mode.gyro.RESET = RESET
robot.hw.mode.gyro.X = X
robot.hw.mode.gyro.Y = Y
robot.hw.mode.gyro.Z = Z
robot.hw.mode.gyro.STRENGTH = STRENGTH
robot.hw.mode.gyro.VALUE = VALUE
robot.hw.mode.humidity.VALUE = VALUE
robot.hw.mode.humidity.HUMIDITY = HUMIDITY
robot.hw.mode.humidity.TEMPERATURE = TEMPERATURE
robot.hw.mode.infrared.DEFAULT = DEFAULT
robot.hw.mode.infrared.VALUE = VALUE
robot.hw.mode.infrared.DISTANCE = DISTANCE
robot.hw.mode.infrared.OBSTACLE = OBSTACLE
robot.hw.mode.infrared.PRESENCE = PRESENCE
robot.hw.mode.infrared.AMBIENTLIGHT = AMBIENTLIGHT
robot.hw.mode.infrared.SENSOR1 = SENSOR1
robot.hw.mode.infrared.SENSOR2 = SENSOR2
robot.hw.mode.infrared.SEEK = SEEK
robot.hw.mode.keys.PRESSED = PRESSED
robot.hw.mode.keys.WAIT_FOR_PRESS = WAIT_FOR_PRESS
robot.hw.mode.keys.WAIT_FOR_PRESS_AND_RELEASE = WAIT_FOR_PRESS_AND_RELEASE
robot.hw.mode.light.DEFAULT = DEFAULT
robot.hw.mode.light.LIGHT = LIGHT
robot.hw.mode.light.RED = RED
robot.hw.mode.light.AMBIENTLIGHT = AMBIENTLIGHT
robot.hw.mode.light.LEFT = LEFT
robot.hw.mode.light.RIGHT = RIGHT
robot.hw.mode.light.LIGHT_VALUE = LIGHT_VALUE
robot.hw.mode.light.VALUE = VALUE
robot.hw.mode.moisture.VALUE = VALUE
robot.hw.mode.motion.VALUE = VALUE
robot.hw.mode.motion.PRESENCE = PRESENCE
robot.hw.mode.pinpull.UP = UP
robot.hw.mode.pinpull.DOWN = DOWN
robot.hw.mode.pinpull.NONE = NONE
robot.hw.mode.pinvalue.ANALOG = ANALOG
robot.hw.mode.pinvalue.DIGITAL = DIGITAL
robot.hw.mode.pinvalue.PULSE_HIGH = PULSE_HIGH
robot.hw.mode.pinvalue.PULSE_LOW = PULSE_LOW
robot.hw.mode.pinvalue.DEFAULT = DEFAULT
robot.hw.mode.pulse.VALUE = VALUE
robot.hw.mode.rfid.VALUE = VALUE
robot.hw.mode.rfid.PRESENCE = PRESENCE
robot.hw.mode.rfid.SERIAL = SERIAL

robot.wait_until.TOUCH = de.fhg.iais.roberta.syntax.sensor.generic.TouchSensor, TOUCH, TOUCH
robot.wait_until.TOUCH_PRESSED = de.fhg.iais.roberta.syntax.sensor.generic.TouchSensor, TOUCH, PRESSED
robot.wait_until.ULTRASONIC_DISTANCE = de.fhg.iais.roberta.syntax.sensor.generic.UltrasonicSensor, ULTRASONIC, DISTANCE
robot.wait_until.ULTRASONIC_PRESENCE = de.fhg.iais.roberta.syntax.sensor.generic.UltrasonicSensor, ULTRASONIC, PRESENCE
robot.wait_until.COLOUR_COLOUR = de.fhg.iais.roberta.syntax.sensor.generic.ColorSensor, COLOUR, COLOUR
robot.wait_until.COLOUR_LIGHT = de.fhg.iais.roberta.syntax.sensor.generic.ColorSensor, COLOUR, LIGHT
robot.wait_until.COLOUR_AMBIENTLIGHT = de.fhg.iais.roberta.syntax.sensor.generic.ColorSensor, COLOUR, AMBIENTLIGHT
robot.wait_until.INFRARED_DISTANCE = de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor, INFRARED, DISTANCE
robot.wait_until.ENCODER_ROTATION = de.fhg.iais.roberta.syntax.sensor.generic.EncoderSensor, ENCODER, ROTATION
robot.wait_until.ENCODER_DEGREE = de.fhg.iais.roberta.syntax.sensor.generic.EncoderSensor, ENCODER, DEGREE
robot.wait_until.ENCODER_DISTANCE = de.fhg.iais.roberta.syntax.sensor.generic.EncoderSensor, ENCODER, DISTANCE
robot.wait_until.KEY_PRESSED = de.fhg.iais.roberta.syntax.sensor.generic.KeysSensor, KEY_PRESSED, PRESSED
robot.wait_until.GYRO_RATE = de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor, GYRO, RATE
robot.wait_until.GYRO_ANGLE = de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor, GYRO, ANGLE
robot.wait_until.GYRO_TILTED = de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor, GYRO, TILTED
robot.wait_until.GYRO_X = de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor, GYRO, X
robot.wait_until.GYRO_Y = de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor, GYRO, Y
robot.wait_until.TIME = de.fhg.iais.roberta.syntax.sensor.generic.TimerSensor, TIME, VALUE
robot.wait_until.TIMER_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.TimerSensor, TIME, VALUE
robot.wait_until.SOUND = de.fhg.iais.roberta.syntax.sensor.generic.SoundSensor, SOUND, VALUE
robot.wait_until.SOUND_SOUND = de.fhg.iais.roberta.syntax.sensor.generic.SoundSensor, SOUND, SOUND
robot.wait_until.LIGHT_LIGHT = de.fhg.iais.roberta.syntax.sensor.generic.LightSensor, LIGHT, LIGHT
robot.wait_until.LIGHT_AMBIENTLIGHT = de.fhg.iais.roberta.syntax.sensor.generic.LightSensor, LIGHT, AMBIENTLIGHT
robot.wait_until.INFRARED_OBSTACLE = de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor, INFRARED, OBSTACLE
robot.wait_until.INFRARED_PRESENCE = de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor, INFRARED, PRESENCE
robot.wait_until.INFRARED_SENSOR1 = de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor, INFRARED, SENSOR1
robot.wait_until.INFRARED_SENSOR2 = de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor, INFRARED, SENSOR2
robot.wait_until.COMPASS_ANGLE = de.fhg.iais.roberta.syntax.sensor.generic.CompassSensor, COMPASS, ANGLE
robot.wait_until.INFRARED_SEEK = de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor, INFRARED, SEEK
robot.wait_until.PINTOUCH_PRESSED = de.fhg.iais.roberta.syntax.sensor.generic.PintouchSensor, PINTOUCH, PRESSED
robot.wait_until.GESTURE_UP = de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor, GESTURE, UP
robot.wait_until.GESTURE_DOWN = de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor, GESTURE, DOWN
robot.wait_until.GESTURE_FACE_UP = de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor, GESTURE, FACE_UP
robot.wait_until.GESTURE_FACE_DOWN = de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor, GESTURE, FACE_DOWN
robot.wait_until.GESTURE_SHAKE = de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor, GESTURE, SHAKE
robot.wait_until.GESTURE_FREEFALL = de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor, GESTURE, FREEFALL
robot.wait_until.GESTURE_ACTIVE = de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor, GESTURE, GESTURE_ACTIVE, GESTURE_ACTIVE
robot.wait_until.MICROPHONE = de.fhg.iais.roberta.syntax.sensor.generic.MicrophoneSensor, MICROPHONE, MICROPHONE
robot.wait_until.TEMPERATURE = de.fhg.iais.roberta.syntax.sensor.generic.TemperatureSensor, TEMPERATURE, TEMPERATURE
robot.wait_until.LIGHT_LEVEL = de.fhg.iais.roberta.syntax.sensor.generic.LightSensor, LIGHT_LEVEL, LIGHT_LEVEL
robot.wait_until.LIGHT_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.LightSensor, LIGHT_VALUE, LIGHT_VALUE
robot.wait_until.ACCELERATION = de.fhg.iais.roberta.syntax.sensor.generic.AccelerationSensor, ACCELERATION, ACCELERATION
robot.wait_until.ORIENTATION = de.fhg.iais.roberta.syntax.sensor.generic.OrientationSensor, ORIENTATION, ORIENTATION
robot.wait_until.PIN_TOUCHED = de.fhg.iais.roberta.syntax.sensor.generic.PinSensor, PIN_TOUCHED, PIN_TOUCHED
robot.wait_until.PIN_ANALOG = de.fhg.iais.roberta.syntax.sensor.generic.PinSensor, PIN_ANALOG, ANALOG
robot.wait_until.PIN_DIGITAL = de.fhg.iais.roberta.syntax.sensor.generic.PinSensor, PIN_DIGITAL, DIGITAL
robot.wait_until.PIN_PULSEHIGH = de.fhg.iais.roberta.syntax.sensor.generic.PinSensor, PIN_PULSEHIGH, PULSEHIGH
robot.wait_until.PIN_PULSELOW = de.fhg.iais.roberta.syntax.sensor.generic.PinSensor, PIN_PULSELOW, PULSELOW
robot.wait_until.PIN_PULSE_HIGH = de.fhg.iais.roberta.syntax.sensor.generic.PinSensor, PIN_PULSE_HIGH, PULSE_HIGH
robot.wait_until.PIN_PULSE_LOW = de.fhg.iais.roberta.syntax.sensor.generic.PinSensor, PIN_PULSE_LOW, PULSE_LOW
robot.wait_until.TEMPERATURE_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.TemperatureSensor, TEMPERATURE, TEMPERATURE
robot.wait_until.ACCELEROMETER_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.AccelerationSensor, ACCELERATION, DEFAULT
robot.wait_until.ACCELEROMETER_X = de.fhg.iais.roberta.syntax.sensor.generic.AccelerationSensor, ACCELERATION, X
robot.wait_until.ACCELEROMETER_Y = de.fhg.iais.roberta.syntax.sensor.generic.AccelerationSensor, ACCELERATION, Y
robot.wait_until.ACCELEROMETER_Z = de.fhg.iais.roberta.syntax.sensor.generic.AccelerationSensor, ACCELERATION, Z
robot.wait_until.ELECTRICCURRENT_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.ElectricSensor, ELECTRIC_CURRENT, VALUE
robot.wait_until.DETECTMARK_IDONE = de.fhg.iais.roberta.syntax.sensor.generic.DetectSensor, DETECT_MARK, IDONE
robot.wait_until.DETECTFACE_NAMEONE = de.fhg.iais.roberta.syntax.sensor.generic.DetectSensor, DETECT_FACE, NAMEONE
robot.wait_until.FSR_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.FsrSensor, FSR, VALUE
robot.wait_until.WALL_DISTANCE = de.fhg.iais.roberta.syntax.sensor.generic.WallSensor, WALL, DISTANCE
robot.wait_until.DROP_OFF_DISTANCE = de.fhg.iais.roberta.syntax.sensor.generic.DropSensor, DROP_OFF, DISTANCE
robot.wait_until.INFRARED_AMBIENTLIGHT = de.fhg.iais.roberta.syntax.sensor.generic.LightSensor, LIGHT, AMBIENTLIGHT
robot.wait_until.MOISTURE_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.MoistureSensor, MOISTURE, VALUE
robot.wait_until.POTENTIOMETER_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.PotentiometerSensor, POTENTIOMETER, VALUE
robot.wait_until.INFRARED_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor, INFRARED, VALUE
robot.wait_until.HUMIDITY_HUMIDITY = de.fhg.iais.roberta.syntax.sensor.generic.HumiditySensor, HUMIDITY, HUMIDITY
robot.wait_until.HUMIDITY_TEMPERATURE = de.fhg.iais.roberta.syntax.sensor.generic.HumiditySensor, HUMIDITY, TEMPERATURE
robot.wait_until.MOTION_PRESENCE = de.fhg.iais.roberta.syntax.sensor.generic.MotionSensor, MOTION, PRESENCE
robot.wait_until.PULSE_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.PulseSensor, PULSE, VALUE
robot.wait_until.DROP_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.DropSensor, DROP, VALUE
robot.wait_until.FLAME_VALUE = de.fhg.iais.roberta.syntax.sensor.generic.FlameSensor, FLAME, FLAME_VALUE
robot.wait_until.RFID_SERIAL = de.fhg.iais.roberta.syntax.sensor.generic.RfidSensor, RFID, SERIAL
robot.wait_until.RFID_PRESENCE = de.fhg.iais.roberta.syntax.sensor.generic.RfidSensor, RFID, PRESENCE

robot.configuration.TOUCH = robBrick_touch
robot.configuration.SOUND = robBrick_sound
robot.configuration.LIGHT = robBrick_light
robot.configuration.ULTRASONIC = robBrick_ultrasonic
robot.configuration.ENCODER = robBrick_encoder
robot.configuration.KEY = robBrick_key
robot.configuration.COLOUR = robBrick_colour
robot.configuration.TIMER = robBrick_timer

robot.configuration.HT_COLOR = robBrick_HiTechnic_colour
robot.configuration.INFRARED = robBrick_infrared
robot.configuration.GYRO = robBrick_gyro
robot.configuration.COMPASS = robBrick_compass
robot.configuration.TEMPERATURE = robBrick_temperature
robot.configuration.JOYSTICK = arduSensors_joystick_getSample
robot.configuration.DETECT_MARK = naoSensors_naoMark
 
robot.configuration.IRSEEKER = robBrick_irseeker
robot.configuration.MOISTURE = robBrick_moisture
robot.configuration.HUMIDITY = robBrick_humidity
robot.configuration.MOTION = robBrick_motion
robot.configuration.DROP = robBrick_drop
robot.configuration.PULSE = robBrick_pulse
robot.configuration.RFID = robBrick_rfide
robot.configuration.PIN_VALUE = robSensors_pin_getSample
robot.configuration.BUTTON = robBrick_key_
robot.configuration.ACCELEROMETER = robBrick_accelerometer
robot.configuration.FLAMESENSOR = robBrick_flame
 

robot.configuration.LARGE = robBrick_motor_big
robot.configuration.OTHER = robBrick_actor
 
robot.configuration.ARDU = robBrick_motor_ardu
robot.configuration.LED_ON_BOARD = makeblockActions_leds_on
robot.configuration.EXTERNAL_LED = robBrick_led
robot.configuration.LED_MATRIX = robBrick_led_matrix
robot.configuration.GEARED_MOTOR = robBrick_motor_geared
 
robot.configuration.BUZZER = robActions_play_tone
robot.configuration.MOTOR = robConf_motor
robot.configuration.ANALOG_PIN = robActions_write_to_pin
